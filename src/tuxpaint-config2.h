// generated by Fast Light User Interface Designer (fluid) version 1.0104

#ifndef tuxpaint_config2_h
#define tuxpaint_config2_h
#include <FL/Fl.H>
#include "defaults.h"
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *WINDOW_tpc;
#include <FL/Fl_Tabs.H>
extern Fl_Tabs *TAB_alltabs;
#include <FL/Fl_Group.H>
extern Fl_Group *TABE_about;
extern Fl_Group *GROUP_abouttpc;
#include <FL/Fl_Text_Display.H>
extern Fl_Text_Display *TEXTOUTPUT_abouttext;
extern Fl_Group *TABE_videoandsound;
extern Fl_Group *GROUP_video;
#include <FL/Fl_Check_Button.H>
extern Fl_Check_Button *CHECKBUTTON_fullscreen;
extern Fl_Check_Button *CHECKBUTTON_native;
extern Fl_Check_Button *CHECKBUTTON_startblank;
#include <FL/Fl_Box.H>
extern Fl_Group *GROUP_resolution;
#include <FL/Fl_Choice.H>
extern Fl_Choice *CHOICE_windowwidth;
extern Fl_Choice *CHOICE_windowheight;
extern Fl_Check_Button *CHECKBUTTON_rotate;
extern Fl_Check_Button *CHECKBUTTON_screensaver;
extern Fl_Group *GROUP_sound;
extern Fl_Check_Button *CHECKBUTTON_soundeffects;
extern Fl_Group *TABE_mouseandkeyboard;
extern Fl_Group *GROUP_mouse;
extern Fl_Check_Button *CHECKBUTTON_fancycursorshapes;
extern Fl_Check_Button *CHECKBUTTON_hidecursor;
extern Fl_Check_Button *CHECKBUTTON_grabmousepointer;
extern Fl_Check_Button *CHECKBUTTON_mousewheelsupport;
extern Fl_Check_Button *CHECKBUTTON_nobuttondistinction;
extern Fl_Group *GROUP_keyboard;
extern Fl_Check_Button *CHECKBUTTON_enablekbd;
extern Fl_Group *TABE_simplification;
extern Fl_Group *GROUP_interfacesimpl;
extern Fl_Check_Button *CHECKBUTTON_disableshaperotation;
extern Fl_Check_Button *CHECKBUTTON_simpleshapeoutlines;
extern Fl_Check_Button *CHECKBUTTON_showuppercasetextonly;
extern Fl_Group *GROUP_controlsimpl;
extern Fl_Check_Button *CHECKBUTTON_disablequitbutton;
extern Fl_Check_Button *CHECKBUTTON_disablestampstool;
extern Fl_Check_Button *CHECKBUTTON_disablestampcontrols;
extern Fl_Check_Button *CHECKBUTTON_disablemagiccontrols;
extern Fl_Check_Button *CHECKBUTTON_disablelabeltool;
extern Fl_Check_Button *CHECKBUTTON_disablesavebutton;
extern Fl_Group *TABE_locale;
extern Fl_Group *GROUP_locale;
extern Fl_Choice *CHOICE_language;
extern Fl_Check_Button *CHECKBUTTON_mirrorstamps;
extern Fl_Check_Button *CHECKBUTTON_loadsystemfonts;
extern Fl_Check_Button *CHECKBUTTON_alllocalefonts;
extern Fl_Group *TABE_printing;
extern Fl_Group *GROUP_printperms;
extern Fl_Check_Button *CHECKBUTTON_allowprinting;
#include <FL/Fl_Value_Input.H>
extern Fl_Value_Input *VALUEINPUT_printdelay;
extern Fl_Check_Button *CHECKBUTTON_printcfg;
extern Fl_Box *LABEL_seconds;
#include <FL/Fl_Round_Button.H>
extern Fl_Round_Button *ROUNDBUTTON_printdialogmod;
extern Fl_Round_Button *ROUNDBUTTON_printdialogalways;
extern Fl_Round_Button *ROUNDBUTTON_printdialognever;
#include <FL/Fl_Input.H>
extern Fl_Group *GROUP_printcmd;
extern Fl_Check_Button *CHECKBUTTON_usealtprintcmd;
extern Fl_Input *TEXTINPUT_printcmd;
extern Fl_Group *GROUP_printdia;
extern Fl_Check_Button *CHECKBUTTON_usealtprintdia;
extern Fl_Input *TEXTINPUT_printdia;
extern Fl_Choice *CHOICE_papersize;
extern Fl_Group *TABE_saving;
extern Fl_Group *GROUP_saveover;
extern Fl_Round_Button *ROUNDBUTTON_askbeforeoverwriting;
extern Fl_Round_Button *ROUNDBUTTON_alwaysoverwriteolderversion;
extern Fl_Round_Button *ROUNDBUTTON_alwayssavenewpicture;
extern Fl_Check_Button *CHECKBUTTON_autosave;
extern Fl_Group *GROUP_savedir;
extern Fl_Check_Button *CHECKBUTTON_usealternatesavedir;
#include <FL/Fl_File_Input.H>
extern Fl_File_Input *FILEINPUT_alternatesavedir;
#include <FL/Fl_Button.H>
extern Fl_Button *BUTTON_browsealternatesavedir;
extern Fl_Group *TABE_data;
extern Fl_Group *GROUP_datadir;
extern Fl_Check_Button *CHECKBUTTON_usealternatedatadir;
extern Fl_File_Input *FILEINPUT_alternatedatadir;
extern Fl_Button *BUTTON_browsealternatedatadir;


extern Fl_Group *TABE_accessibility;
extern Fl_Check_Button *CHECKBUTTON_mouse_accessibility;
extern Fl_Check_Button *CHECKBUTTON_keyboard_mouse;
extern Fl_Check_Button *CHECKBUTTON_onscreen_keyboard;
extern Fl_Choice *CHOICE_onscreen_keyboard_layout;
extern Fl_Check_Button *CHECKBUTTON_onscreen_keyboard_disable_change;


#include <FL/Fl_Spinner.H>
#include <FL/Fl_Scroll.H>
extern Fl_Scroll *TABE_joystick;
extern Fl_Spinner *SPINNER_joystick_dev;
extern Fl_Spinner *SPINNER_joystick_slowness;
extern Fl_Spinner *SPINNER_joystick_threshold;
extern Fl_Spinner *SPINNER_joystick_maxsteps;
extern Fl_Spinner *SPINNER_joystick_hat_slowness;
extern Fl_Spinner *SPINNER_joystick_hat_timeout;
extern Fl_Input *TEXTINPUT_joystick_buttons_ignore;
extern Fl_Check_Button *CHECKBUTTON_joystick_buttons_ignore;
extern Fl_Spinner *SPINNER_joystick_btn_brush;	
extern Fl_Spinner *SPINNER_joystick_btn_label;	
extern Fl_Spinner *SPINNER_joystick_btn_new; 	
extern Fl_Spinner *SPINNER_joystick_btn_print;	
extern Fl_Spinner *SPINNER_joystick_btn_shapes;	
extern Fl_Spinner *SPINNER_joystick_btn_undo;	
extern Fl_Spinner *SPINNER_joystick_btn_eraser;	
extern Fl_Spinner *SPINNER_joystick_btn_lines;	
extern Fl_Spinner *SPINNER_joystick_btn_open;	
extern Fl_Spinner *SPINNER_joystick_btn_redo;	
extern Fl_Spinner *SPINNER_joystick_btn_stamp;	
extern Fl_Spinner *SPINNER_joystick_btn_escape;	
extern Fl_Spinner *SPINNER_joystick_btn_magic;	
extern Fl_Spinner *SPINNER_joystick_btn_pgsetup;
extern Fl_Spinner *SPINNER_joystick_btn_save;	
extern Fl_Spinner *SPINNER_joystick_btn_text;   


extern Fl_Check_Button *CHECKBUTTON_nolockfile;
extern Fl_Group *GROUP_colorfile;
extern Fl_Check_Button *CHECKBUTTON_usecolorfile;
extern Fl_File_Input *FILEINPUT_colorfile;
extern Fl_Button *BUTTON_browsecolorfile;
extern Fl_Button *BUTTON_apply;
extern Fl_Button *BUTTON_reset;
extern Fl_Button *BUTTON_defaults;
extern Fl_Choice *CHOICE_settings;
extern Fl_Check_Button *CHECKBUTTON_usealluserssettings;
#include <FL/Fl_Slider.H>
extern Fl_Slider *SLIDER_stampsize;
Fl_Double_Window* Show_TPC_Window();

enum {
  WW_640,
  WW_768,
  WW_800,
  WW_854,
  WW_1024,
  WW_1280,
  WW_1400,
  WW_1600,
  WW_1680,
  WW_1920,
  WW_2048,
  WW_2560,
  NUM_WINDOW_WIDTHS
};

enum {
  WH_480,
  WH_576,
  WH_600,
  WH_720,
  WH_768,
  WH_800,
  WH_960,
  WH_1024,
  WH_1050,
  WH_1080,
  WH_1200,
  WH_1536,
  WH_1600,
  WH_2048,
  NUM_WINDOW_HEIGHTS
};

#define USE_PAPERSIZES   !(defined(__WIN32__) || defined(__APPLE__) || defined(__BEOS__))

#if USE_PAPERSIZES
extern int num_papersizes;
extern char * * papersizes;
#endif

#define CURRENT_USER 0
#define ALL_USERS 1

#endif
